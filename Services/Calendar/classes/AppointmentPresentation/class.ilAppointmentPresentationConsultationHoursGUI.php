<?php
include_once './Services/Calendar/interfaces/interface.ilCalendarAppointmentPresentation.php';
include_once './Services/Calendar/classes/AppointmentPresentation/class.ilAppointmentPresentationGUI.php';

/**
 *
 * @author Jesús López Reyes <lopez@leifos.com>
 * @version $Id$
 *
 * @ilCtrl_IsCalledBy ilAppointmentPresentationConsultationHoursGUI: ilCalendarAppointmentPresentationGUI
 *
 * @ingroup ServicesCalendar
 */
class ilAppointmentPresentationConsultationHoursGUI extends ilAppointmentPresentationGUI implements ilCalendarAppointmentPresentation
{

	public function getHTML()
	{
		global $lng, $ilCtrl;

		$a_infoscreen = $this->getInfoScreen();
		$a_app = $this->appointment;

		//WORKING HERE

		return;

		//include_once "./Modules/Course/classes/class.ilObjConsu....php";

		$cat_id = $this->getCatId($a_app['event']->getEntryId());
		$cat_info = $this->getCatInfo($cat_id);

		//ilLoggerFactory::getRootLogger()->debug("cat_info",$cat_info);

		$crs = new ilObjConsultatio($cat_info['obj_id'], false);
		$files =& ilCourseFile::_readFilesByCourse($cat_info['obj_id']);


		$description_text = $cat_info['title'] . ", " . ilObject::_lookupDescription($cat_info['obj_id']);
		$a_infoscreen->addSection($cat_info['title']);

		if ($a_app['event']->getDescription()) {
			$a_infoscreen->addProperty($lng->txt("description"), ilUtil::makeClickable(nl2br($a_app['event']->getDescription())));
		}
		$a_infoscreen->addProperty($lng->txt(ilObject::_lookupType($cat_info['obj_id'])), $description_text);

		$a_infoscreen->addSection($lng->txt((ilOBject::_lookupType($cat_info['obj_id']) == "usr" ? "app" : ilOBject::_lookupType($cat_info['obj_id'])) . "_info"));
		$a_infoscreen->addProperty($lng->txt("crs_important_info"), $crs->getImportantInformation());
		$a_infoscreen->addProperty($lng->txt("crs_syllabus"), $crs->getSyllabus());
		$a_infoscreen->addProperty($lng->txt("crs_contact"), "Text from Contact of Setting > Course Information  (do not display if not applicable)The Contact from Course Information should be swapped for Tutorial Support.");

		if (count($files)) {
			$tpl = new ilTemplate('tpl.event_info_file.html', true, true, 'Modules/Course');
			foreach ($files as $file) {
				$tpl->setCurrentBlock("files");
				$ilCtrl->setParameter($this, 'file_id', $file->getFileId());
				//TODO DOWNLOAD LINK CALL
				//$tpl->setVariable("DOWN_LINK",$ilCtrl->getLinkTarget($this,'sendfile'));
				$tpl->setVariable("DOWN_NAME", $file->getFileName());
				$tpl->setVariable("DOWN_INFO_TXT", $lng->txt('crs_file_size_info'));
				$tpl->setVariable("DOWN_SIZE", $file->getFileSize());
				$tpl->setVariable("TXT_BYTES", $lng->txt('bytes'));
				$tpl->parseCurrentBlock();
			}
			$a_infoscreen->addProperty($lng->txt("files"), $tpl->get());
		}

		// support contacts
		$parts = ilParticipants::getInstanceByObjId($cat_info['obj_id']);
		$conts = $parts->getContacts();
		if (count($conts) > 0) {
			foreach ($conts as $c) {
				include_once("./Services/User/classes/class.ilPublicUserProfileGUI.php");
				$pgui = new ilPublicUserProfileGUI($c);
				//TODO DOWNLOAD LINK CALL
				//$pgui->setBackUrl($ilCtrl->getLinkTargetByClass("ilinfoscreengui"));
				$pgui->setEmbedded(true);
				$a_infoscreen->addProperty($lng->txt("crs_mem_contacts"), $pgui->getHTML());
			}
		}

		return $a_infoscreen;
	}

	public function addToolbar(ilToolbarGUI $a_toolbar)
	{
		parent::addToolbar($a_toolbar); // TODO: Change the autogenerated stub
	}
}